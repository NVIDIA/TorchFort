name: "Build"

on:
  #issue_comment:
  #  types: [created]
  pull_request:
    branches: [ master ]

jobs:
  build:
    #if: github.event.issue.pull_request && contains(github.event.comment.body, '/build_and_test')
    strategy:
      matrix:
        include:
          - name: "GPU build (NVHPC SDK 25.7, Ubuntu 22.04)"
            dockerfile: "Dockerfile"
            free_space: true
            run_tests: false
          - name: "GPU build (GNU, Ubuntu 22.04)"
            dockerfile: "Dockerfile_gnu"
            free_space: false
            run_tests: false
          - name: "CPU build (GNU, Ubuntu 22.04)"
            dockerfile: "Dockerfile_gnu_cpuonly"
            free_space: false
            run_tests: true

    name: ${{ matrix.name }}
    runs-on: ubuntu-latest

    steps:
    - name: "Free disk space" # reference: jlumbroso/free-disk-space
      if: ${{ matrix.free_space }}
      run: |
        sudo rm -rf /usr/local/lib/android || true
        sudo rm -rf /usr/share/dotnet || true
        #sudo apt-get remove -y '^aspnetcore-.*' || echo "::warning::The command [sudo apt-get remove -y '^aspnetcore-.*'] failed to complete successfully. Proceeding..."
        #sudo apt-get remove -y '^dotnet-.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y '^dotnet-.*' --fix-missing] failed to complete successfully. Proceeding..."
        #sudo apt-get remove -y '^llvm-.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y '^llvm-.*' --fix-missing] failed to complete successfully. Proceeding..."
        #sudo apt-get remove -y 'php.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y 'php.*' --fix-missing] failed to complete successfully. Proceeding..."
        #sudo apt-get remove -y '^mongodb-.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y '^mongodb-.*' --fix-missing] failed to complete successfully. Proceeding..."
        #sudo apt-get remove -y '^mysql-.*' --fix-missing || echo "::warning::The command [sudo apt-get remove -y '^mysql-.*' --fix-missing] failed to complete successfully. Proceeding..."
        #sudo apt-get remove -y azure-cli google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri --fix-missing || echo "::warning::The command [sudo apt-get remove -y azure-cli google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri --fix-missing] failed to complete successfully. Proceeding..."
        #sudo apt-get remove -y google-cloud-sdk --fix-missing || echo "::debug::The command [sudo apt-get remove -y google-cloud-sdk --fix-missing] failed to complete successfully. Proceeding..."
        #sudo apt-get remove -y google-cloud-cli --fix-missing || echo "::debug::The command [sudo apt-get remove -y google-cloud-cli --fix-missing] failed to complete successfully. Proceeding..."
        #sudo apt-get autoremove -y || echo "::warning::The command [sudo apt-get autoremove -y] failed to complete successfully. Proceeding..."
        #sudo apt-get clean

    - name: "Checkout code"
      uses: actions/checkout@v4

    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3

    - name: "Build docker container"
      run: |
        docker build -t torchfort -f docker/${{ matrix.dockerfile }} .

    - name: "Run tests"
      if: ${{ matrix.run_tests }}
      run: |
        docker run --rm torchfort bash -c "
          cd /opt/torchfort/bin/tests/general
          python scripts/setup_tests.py
          ./test_losses
        "
        docker run --rm torchfort bash -c "
          cd /opt/torchfort/bin/tests/supervised
          python scripts/setup_tests.py
          ./test_checkpoint
        "
        docker run --rm torchfort bash -c "
          cd /opt/torchfort/bin/tests/supervised
          python scripts/setup_tests.py
          ./test_training
        "
        docker run --rm torchfort bash -c "
          cd /opt/torchfort/bin/tests/rl
          ./test_distributions
        "
        docker run --rm torchfort bash -c "
          cd /opt/torchfort/bin/tests/rl
          ./test_replay_buffer
        "
        docker run --rm torchfort bash -c "
          cd /opt/torchfort/bin/tests/rl
          ./test_rollout_buffer
        "
        
